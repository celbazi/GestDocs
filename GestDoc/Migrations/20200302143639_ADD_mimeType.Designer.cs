// <auto-generated />
using System;
using GestDoc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestDoc.Migrations
{
    [DbContext(typeof(GestDocsContext))]
    [Migration("20200302143639_ADD_mimeType")]
    partial class ADD_mimeType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestDoc.Models.Adherent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsMember");

                    b.Property<string>("Nom");

                    b.Property<string>("Photo");

                    b.Property<string>("Prenom");

                    b.HasKey("ID");

                    b.ToTable("Adherent");
                });

            modelBuilder.Entity("GestDoc.Models.Document", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content");

                    b.Property<string>("MimeType");

                    b.Property<int>("ReunionID");

                    b.Property<string>("URL");

                    b.HasKey("ID");

                    b.HasIndex("ReunionID");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("GestDoc.Models.Participation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdherentID");

                    b.Property<int>("ReunionID");

                    b.HasKey("ID");

                    b.HasIndex("AdherentID");

                    b.HasIndex("ReunionID");

                    b.ToTable("Participation");
                });

            modelBuilder.Entity("GestDoc.Models.Reunion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateReunion");

                    b.Property<string>("Remarque");

                    b.Property<int>("TypeReunionID");

                    b.HasKey("ID");

                    b.HasIndex("TypeReunionID");

                    b.ToTable("Reunion");
                });

            modelBuilder.Entity("GestDoc.Models.TypeReunion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle");

                    b.HasKey("ID");

                    b.ToTable("TypeReunion");
                });

            modelBuilder.Entity("GestDoc.Models.Document", b =>
                {
                    b.HasOne("GestDoc.Models.Reunion", "Reunion")
                        .WithMany("Documents")
                        .HasForeignKey("ReunionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestDoc.Models.Participation", b =>
                {
                    b.HasOne("GestDoc.Models.Adherent", "Adherent")
                        .WithMany("Participations")
                        .HasForeignKey("AdherentID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestDoc.Models.Reunion", "Reunion")
                        .WithMany("Participants")
                        .HasForeignKey("ReunionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestDoc.Models.Reunion", b =>
                {
                    b.HasOne("GestDoc.Models.TypeReunion", "TypeReunion")
                        .WithMany("Reunions")
                        .HasForeignKey("TypeReunionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
